# Generated by Django 3.1.7 on 2021-03-24 22:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=5)),
                ('title', models.CharField(max_length=100)),
                ('credit_hours', models.CharField(default='', max_length=10)),
            ],
            options={
                'ordering': ['subject', 'number'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_notify', models.BooleanField(default=True)),
                ('email_unsub_id', models.UUIDField(default=uuid.uuid4)),
            ],
            options={
                'ordering': ['section'],
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['school', 'lastname'],
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, help_text='This is also the domain name minus the .edu', max_length=16)),
                ('active', models.BooleanField(default=False, help_text='Whether the school is displayed on the home page and available on add-courses')),
                ('color_hex', models.CharField(blank=True, help_text='School color used on their add-courses page, no #', max_length=6)),
                ('url', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WebScraper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_std', models.CharField(max_length=6)),
                ('code', models.CharField(help_text='E.g. 202008', max_length=6)),
                ('description', models.CharField(help_text='E.g. Fall 2020', max_length=20)),
                ('default', models.BooleanField(default=False, help_text='Whether this is the default term on the add-courses page')),
                ('update', models.BooleanField(default=False, help_text='Whether related sections are updated')),
                ('display', models.BooleanField(default=False, help_text='Whether this term is displayed on the add-courses page')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school')),
            ],
            options={
                'ordering': ['school', '-code_std'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_title', models.CharField(help_text='E.g. ITEC', max_length=4)),
                ('long_title', models.CharField(help_text='E.g. Information Technology', max_length=100)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school')),
            ],
            options={
                'ordering': ['school', 'short_title'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crn', models.CharField(max_length=5)),
                ('section_num', models.CharField(max_length=3)),
                ('section_title', models.CharField(blank=True, help_text='For most sections, the section_title is equal to its course__title, however this is not the case for hybrid/online/special topics classes.', max_length=100)),
                ('credit_hours', models.SmallIntegerField()),
                ('days', models.CharField(blank=True, default='', max_length=7)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('room', models.CharField(blank=True, default='', max_length=50)),
                ('enrolled', models.SmallIntegerField()),
                ('available', models.SmallIntegerField()),
                ('capacity', models.SmallIntegerField()),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.course')),
                ('professor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.professor')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.term')),
                ('watchers', models.ManyToManyField(through='core.Favorite', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['term', 'course', 'section_num'],
            },
        ),
        migrations.AddField(
            model_name='school',
            name='web_scraper',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.webscraper'),
        ),
        migrations.AddField(
            model_name='professor',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.section'),
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.school'),
        ),
        migrations.AddField(
            model_name='course',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subject'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('user', 'section')},
        ),
    ]
